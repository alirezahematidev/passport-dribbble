0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish', './' ]
2 info using npm@2.1.6
3 info using node@v0.10.33
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ './' ]
6 silly cache add args [ './', null ]
7 verbose cache add spec ./
8 silly cache add parsed spec { raw: './',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: './',
8 silly cache add   spec: '/Users/apprentice/Desktop/passport-dribbble',
8 silly cache add   type: 'directory' }
9 verbose tar pack [ '/Users/apprentice/.npm/passport-dribbble/1.0.0/package.tgz',
9 verbose tar pack   '/Users/apprentice/Desktop/passport-dribbble' ]
10 verbose tarball /Users/apprentice/.npm/passport-dribbble/1.0.0/package.tgz
11 verbose folder /Users/apprentice/Desktop/passport-dribbble
12 info prepublish passport-dribbble@1.0.0
13 verbose addLocalTarball adding from inside cache /Users/apprentice/.npm/passport-dribbble/1.0.0/package.tgz
14 silly cache afterAdd passport-dribbble@1.0.0
15 verbose afterAdd /Users/apprentice/.npm/passport-dribbble/1.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/apprentice/.npm/passport-dribbble/1.0.0/package/package.json written
17 silly publish { name: 'passport-dribbble',
17 silly publish   version: '1.0.0',
17 silly publish   description: 'Dribbble authentication strategy for Passport.',
17 silly publish   main: './lib/passport-dribbble',
17 silly publish   dependencies: { 'passport-oauth': '^0.1.15', pkginfo: '^0.2.3' },
17 silly publish   devDependencies: { vows: '0.6.x' },
17 silly publish   scripts: { test: 'NODE_PATH=lib node_modules/.bin/vows test/*-test.js' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git://github.com/sebabelmar/passport-dribbble.git' },
17 silly publish   keywords: [ 'passport', 'dribbble', 'auth' ],
17 silly publish   author: { name: 'Sebastian Belmar' },
17 silly publish   license: 'MIT',
17 silly publish   bugs: { url: 'https://github.com/sebabelmar/passport-dribbble/issues' },
17 silly publish   homepage: 'https://github.com/sebabelmar/passport-dribbble',
17 silly publish   readme: '# Passport-Dribbble\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [Dribbble](http://dribbble.com/) using the OAuth 2.0 API.\n\nThis module lets you authenticate using dribbble in your Node.js applications.\nBy plugging into Passport, dribbble authentication can be easily and\nunobtrusively integrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-dribbble\n\n## Usage\n\n#### Configure Strategy\n\nThe Dribbble authentication strategy authenticates users using a dribbble\naccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\naccepts these credentials and calls `done` providing a user, as well as\n`options` specifying a client ID, client secret, and callback URL.\n\n    passport.use(new DribbbleStrategy({\n        clientID: DRIBBBLE_CLIENT_ID,\n        clientSecret: DRIBBBLE_CLIENT_SECRET,\n        callbackURL: "http://127.0.0.1:3000/auth/dribbble/callback"\n      },\n      function(accessToken, refreshToken, profile, done) {\n        User.findOrCreate({ dribbbleId: profile.id }, function (err, user) {\n          return done(err, user);\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `\'dribbble\'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get(\'/auth/dribbble\',\n      passport.authenticate(\'dribbble\'));\n\n    app.get(\'/auth/dribbble/callback\',\n      passport.authenticate(\'dribbble\', { failureRedirect: \'/login\' }),\n      function(req, res) {\n        // Successful authentication, redirect home.\n        res.redirect(\'/\');\n      });\n\n## Tests\n\n    $ npm install --dev\n    $ make test\n\n## Credits\n\n  [Seba Belmar](http://github.com/sebabelmar)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2015 [Seba Belmar](http://sebabelmar.com/)\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'c3dafb7a6096706d9c782d90e0f99110b32d377b',
17 silly publish   _id: 'passport-dribbble@1.0.0',
17 silly publish   _shasum: 'c2f36ad487734d982d0764b822822eac582d4b9b',
17 silly publish   _from: '.' }
18 verbose mapToRegistry name passport-dribbble
19 verbose mapToRegistry uri https://registry.npmjs.org/passport-dribbble
20 verbose publish registryBase https://registry.npmjs.org/
21 verbose request on initialization, where is /passport-dribbble
22 verbose request after pass 1, where is /passport-dribbble
23 verbose request url raw /passport-dribbble
24 verbose request resolving registry [ 'https://registry.npmjs.org/', './passport-dribbble' ]
25 verbose request after pass 2, where is https://registry.npmjs.org/passport-dribbble
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 19:50:47
28 verbose request id b181b2bec8c3e531
29 http request PUT https://registry.npmjs.org/passport-dribbble
30 http 403 https://registry.npmjs.org/passport-dribbble
31 verbose headers { date: 'Tue, 20 Jan 2015 03:50:47 GMT',
31 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
31 verbose headers   'content-type': 'application/json',
31 verbose headers   'cache-control': 'max-age=60',
31 verbose headers   'content-length': '5033',
31 verbose headers   'accept-ranges': 'bytes',
31 verbose headers   via: '1.1 varnish',
31 verbose headers   'x-served-by': 'cache-sjc3121-SJC',
31 verbose headers   'x-cache': 'MISS',
31 verbose headers   'x-cache-hits': '0',
31 verbose headers   'x-timer': 'S1421725847.014801,VS0,VE62',
31 verbose headers   'keep-alive': 'timeout=10, max=50',
31 verbose headers   connection: 'Keep-Alive' }
32 error publish Failed PUT 403
33 verbose stack Error: forbidden cannot modify pre-existing version: 1.0.0
33 verbose stack old={"name":"passport-dribbble","version":"1.0.0","description":"Dribbble authentication strategy for Passport.","main":"./lib/passport-dribbble","dependencies":{"passport-oauth":"^0.1.15","pkginfo":"^0.2.3"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js"},"repository":{"type":"git","url":"git://github.com/sebabelmar/passport-dribbble.git"},"keywords":["passport","dribbble","auth"],"author":{"name":"Sebastian Belmar"},"license":"MIT","bugs":{"url":"https://github.com/sebabelmar/passport-dribbble/issues"},"homepage":"https://github.com/sebabelmar/passport-dribbble","gitHead":"0ff668c148c33360eeb6943f02f041a7bfec195f","_id":"passport-dribbble@1.0.0","_shasum":"1f71940684f1caaf46232081b2333d7cc9be1cbd","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.33","_npmUser":{"name":"sebabelmar","email":"si.belmar@gmail.com"},"maintainers":[{"name":"sebabelmar","email":"si.belmar@gmail.com"}],"dist":{"shasum":"1f71940684f1caaf46232081b2333d7cc9be1cbd","tarball":"http://registry.npmjs.org/passport-dribbble/-/passport-dribbble-1.0.0.tgz"}}
33 verbose stack new={"name":"passport-dribbble","version":"1.0.0","description":"Dribbble authentication strategy for Passport.","main":"./lib/passport-dribbble","dependencies":{"passport-oauth":"^0.1.15","pkginfo":"^0.2.3"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js"},"repository":{"type":"git","url":"git://github.com/sebabelmar/passport-dribbble.git"},"keywords":["passport","dribbble","auth"],"author":{"name":"Sebastian Belmar"},"license":"MIT","bugs":{"url":"https://github.com/sebabelmar/passport-dribbble/issues"},"homepage":"https://github.com/sebabelmar/passport-dribbble","readme":"# Passport-Dribbble\u000a\u000a[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\u000awith [Dribbble](http://dribbble.com/) using the OAuth 2.0 API.\u000a\u000aThis module lets you authenticate using dribbble in your Node.js applications.\u000aBy plugging into Passport, dribbble authentication can be easily and\u000aunobtrusively integrated into any application or framework that supports\u000a[Connect](http://www.senchalabs.org/connect/)-style middleware, including\u000a[Express](http://expressjs.com/).\u000a\u000a## Install\u000a\u000a    $ npm install passport-dribbble\u000a\u000a## Usage\u000a\u000a#### Configure Strategy\u000a\u000aThe Dribbble authentication strategy authenticates users using a dribbble\u000aaccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\u000aaccepts these credentials and calls `done` providing a user, as well as\u000a`options` specifying a client ID, client secret, and callback URL.\u000a\u000a    passport.use(new DribbbleStrategy({\u000a        clientID: DRIBBBLE_CLIENT_ID,\u000a        clientSecret: DRIBBBLE_CLIENT_SECRET,\u000a        callbackURL: \"http://127.0.0.1:3000/auth/dribbble/callback\"\u000a      },\u000a      function(accessToken, refreshToken, profile, done) {\u000a        User.findOrCreate({ dribbbleId: profile.id }, function (err, user) {\u000a          return done(err, user);\u000a        });\u000a      }\u000a    ));\u000a\u000a#### Authenticate Requests\u000a\u000aUse `passport.authenticate()`, specifying the `'dribbble'` strategy, to\u000aauthenticate requests.\u000a\u000aFor example, as route middleware in an [Express](http://expressjs.com/)\u000aapplication:\u000a\u000a    app.get('/auth/dribbble',\u000a      passport.authenticate('dribbble'));\u000a\u000a    app.get('/auth/dribbble/callback',\u000a      passport.authenticate('dribbble', { failureRedirect: '/login' }),\u000a      function(req, res) {\u000a        // Successful authentication, redirect home.\u000a        res.redirect('/');\u000a      });\u000a\u000a## Tests\u000a\u000a    $ npm install --dev\u000a    $ make test\u000a\u000a## Credits\u000a\u000a  [Seba Belmar](http://github.com/sebabelmar)\u000a\u000a## License\u000a\u000a[The MIT License](http://opensource.org/licenses/MIT)\u000a\u000aCopyright (c) 2015 [Seba Belmar](http://sebabelmar.com/)\u000a","readmeFilename":"README.md","gitHead":"c3dafb7a6096706d9c782d90e0f99110b32d377b","_id":"passport-dribbble@1.0.0","_shasum":"c2f36ad487734d982d0764b822822eac582d4b9b","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.33","_npmUser":{"name":"sebabelmar","email":"si.belmar@gmail.com"},"maintainers":[{"name":"sebabelmar","email":"si.belmar@gmail.com"}],"dist":{"shasum":"c2f36ad487734d982d0764b822822eac582d4b9b","tarball":"http://registry.npmjs.org/passport-dribbble/-/passport-dribbble-1.0.0.tgz"}}: passport-dribbble
33 verbose stack     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:260:14)
33 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:197:65)
33 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:364:22)
33 verbose stack     at Request.emit (events.js:98:17)
33 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
33 verbose stack     at Request.emit (events.js:117:20)
33 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
33 verbose stack     at IncomingMessage.emit (events.js:117:20)
33 verbose stack     at _stream_readable.js:943:16
33 verbose stack     at process._tickCallback (node.js:419:13)
34 verbose statusCode 403
35 verbose pkgid passport-dribbble
36 verbose cwd /Users/apprentice/Desktop/passport-dribbble
37 error Darwin 14.0.0
38 error argv "node" "/usr/local/bin/npm" "publish" "./"
39 error node v0.10.33
40 error npm  v2.1.6
41 error code E403
42 error forbidden cannot modify pre-existing version: 1.0.0
42 error old={"name":"passport-dribbble","version":"1.0.0","description":"Dribbble authentication strategy for Passport.","main":"./lib/passport-dribbble","dependencies":{"passport-oauth":"^0.1.15","pkginfo":"^0.2.3"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js"},"repository":{"type":"git","url":"git://github.com/sebabelmar/passport-dribbble.git"},"keywords":["passport","dribbble","auth"],"author":{"name":"Sebastian Belmar"},"license":"MIT","bugs":{"url":"https://github.com/sebabelmar/passport-dribbble/issues"},"homepage":"https://github.com/sebabelmar/passport-dribbble","gitHead":"0ff668c148c33360eeb6943f02f041a7bfec195f","_id":"passport-dribbble@1.0.0","_shasum":"1f71940684f1caaf46232081b2333d7cc9be1cbd","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.33","_npmUser":{"name":"sebabelmar","email":"si.belmar@gmail.com"},"maintainers":[{"name":"sebabelmar","email":"si.belmar@gmail.com"}],"dist":{"shasum":"1f71940684f1caaf46232081b2333d7cc9be1cbd","tarball":"http://registry.npmjs.org/passport-dribbble/-/passport-dribbble-1.0.0.tgz"}}
42 error new={"name":"passport-dribbble","version":"1.0.0","description":"Dribbble authentication strategy for Passport.","main":"./lib/passport-dribbble","dependencies":{"passport-oauth":"^0.1.15","pkginfo":"^0.2.3"},"devDependencies":{"vows":"0.6.x"},"scripts":{"test":"NODE_PATH=lib node_modules/.bin/vows test/*-test.js"},"repository":{"type":"git","url":"git://github.com/sebabelmar/passport-dribbble.git"},"keywords":["passport","dribbble","auth"],"author":{"name":"Sebastian Belmar"},"license":"MIT","bugs":{"url":"https://github.com/sebabelmar/passport-dribbble/issues"},"homepage":"https://github.com/sebabelmar/passport-dribbble","readme":"# Passport-Dribbble\u000a\u000a[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\u000awith [Dribbble](http://dribbble.com/) using the OAuth 2.0 API.\u000a\u000aThis module lets you authenticate using dribbble in your Node.js applications.\u000aBy plugging into Passport, dribbble authentication can be easily and\u000aunobtrusively integrated into any application or framework that supports\u000a[Connect](http://www.senchalabs.org/connect/)-style middleware, including\u000a[Express](http://expressjs.com/).\u000a\u000a## Install\u000a\u000a    $ npm install passport-dribbble\u000a\u000a## Usage\u000a\u000a#### Configure Strategy\u000a\u000aThe Dribbble authentication strategy authenticates users using a dribbble\u000aaccount and OAuth 2.0 tokens.  The strategy requires a `verify` callback, which\u000aaccepts these credentials and calls `done` providing a user, as well as\u000a`options` specifying a client ID, client secret, and callback URL.\u000a\u000a    passport.use(new DribbbleStrategy({\u000a        clientID: DRIBBBLE_CLIENT_ID,\u000a        clientSecret: DRIBBBLE_CLIENT_SECRET,\u000a        callbackURL: \"http://127.0.0.1:3000/auth/dribbble/callback\"\u000a      },\u000a      function(accessToken, refreshToken, profile, done) {\u000a        User.findOrCreate({ dribbbleId: profile.id }, function (err, user) {\u000a          return done(err, user);\u000a        });\u000a      }\u000a    ));\u000a\u000a#### Authenticate Requests\u000a\u000aUse `passport.authenticate()`, specifying the `'dribbble'` strategy, to\u000aauthenticate requests.\u000a\u000aFor example, as route middleware in an [Express](http://expressjs.com/)\u000aapplication:\u000a\u000a    app.get('/auth/dribbble',\u000a      passport.authenticate('dribbble'));\u000a\u000a    app.get('/auth/dribbble/callback',\u000a      passport.authenticate('dribbble', { failureRedirect: '/login' }),\u000a      function(req, res) {\u000a        // Successful authentication, redirect home.\u000a        res.redirect('/');\u000a      });\u000a\u000a## Tests\u000a\u000a    $ npm install --dev\u000a    $ make test\u000a\u000a## Credits\u000a\u000a  [Seba Belmar](http://github.com/sebabelmar)\u000a\u000a## License\u000a\u000a[The MIT License](http://opensource.org/licenses/MIT)\u000a\u000aCopyright (c) 2015 [Seba Belmar](http://sebabelmar.com/)\u000a","readmeFilename":"README.md","gitHead":"c3dafb7a6096706d9c782d90e0f99110b32d377b","_id":"passport-dribbble@1.0.0","_shasum":"c2f36ad487734d982d0764b822822eac582d4b9b","_from":".","_npmVersion":"2.1.6","_nodeVersion":"0.10.33","_npmUser":{"name":"sebabelmar","email":"si.belmar@gmail.com"},"maintainers":[{"name":"sebabelmar","email":"si.belmar@gmail.com"}],"dist":{"shasum":"c2f36ad487734d982d0764b822822eac582d4b9b","tarball":"http://registry.npmjs.org/passport-dribbble/-/passport-dribbble-1.0.0.tgz"}}: passport-dribbble
43 error If you need help, you may report this error at:
43 error     <http://github.com/npm/npm/issues>
44 verbose exit [ 1, true ]
